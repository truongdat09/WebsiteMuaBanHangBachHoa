#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiniF4Store.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BACHHOA")]
	public partial class QL_BachHoaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIET_HD(CHITIET_HD instance);
    partial void UpdateCHITIET_HD(CHITIET_HD instance);
    partial void DeleteCHITIET_HD(CHITIET_HD instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertCHITIET_PN(CHITIET_PN instance);
    partial void UpdateCHITIET_PN(CHITIET_PN instance);
    partial void DeleteCHITIET_PN(CHITIET_PN instance);
    partial void InsertCHITIET_QUYEN(CHITIET_QUYEN instance);
    partial void UpdateCHITIET_QUYEN(CHITIET_QUYEN instance);
    partial void DeleteCHITIET_QUYEN(CHITIET_QUYEN instance);
    partial void InsertDOITRA(DOITRA instance);
    partial void UpdateDOITRA(DOITRA instance);
    partial void DeleteDOITRA(DOITRA instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMHANG(NHOMHANG instance);
    partial void UpdateNHOMHANG(NHOMHANG instance);
    partial void DeleteNHOMHANG(NHOMHANG instance);
    partial void InsertNHOMQUYEN(NHOMQUYEN instance);
    partial void UpdateNHOMQUYEN(NHOMQUYEN instance);
    partial void DeleteNHOMQUYEN(NHOMQUYEN instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    #endregion
		
		public QL_BachHoaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_BACHHOAConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BachHoaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BachHoaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BachHoaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_BachHoaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIET_HD> CHITIET_HDs
		{
			get
			{
				return this.GetTable<CHITIET_HD>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIET_PN> CHITIET_PNs
		{
			get
			{
				return this.GetTable<CHITIET_PN>();
			}
		}
		
		public System.Data.Linq.Table<CHITIET_QUYEN> CHITIET_QUYENs
		{
			get
			{
				return this.GetTable<CHITIET_QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<DOITRA> DOITRAs
		{
			get
			{
				return this.GetTable<DOITRA>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMHANG> NHOMHANGs
		{
			get
			{
				return this.GetTable<NHOMHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHOMQUYEN> NHOMQUYENs
		{
			get
			{
				return this.GetTable<NHOMQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_HD")]
	public partial class CHITIET_HD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private string _MAHD;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<int> _GIABAN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<HOADON> _HOADON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnGIABANChanging(System.Nullable<int> value);
    partial void OnGIABANChanged();
    #endregion
		
		public CHITIET_HD()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._HOADON = default(EntityRef<HOADON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int")]
		public System.Nullable<int> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIET_HD", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIET_HDs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HDs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIET_HD", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIET_HDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIET_HDs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private int _MANH;
		
		private string _TENSP;
		
		private string _HINH;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _KHOILUONG;
		
		private System.Nullable<int> _GIABAN;
		
		private System.Nullable<int> _LUOTBAN;
		
		private System.Nullable<int> _MANCC;
		
		private EntitySet<CHITIET_HD> _CHITIET_HDs;
		
		private EntitySet<CHITIET_PN> _CHITIET_PNs;
		
		private EntitySet<DOITRA> _DOITRAs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHOMHANG> _NHOMHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMANHChanging(int value);
    partial void OnMANHChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnHINHChanging(string value);
    partial void OnHINHChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnKHOILUONGChanging(string value);
    partial void OnKHOILUONGChanged();
    partial void OnGIABANChanging(System.Nullable<int> value);
    partial void OnGIABANChanged();
    partial void OnLUOTBANChanging(System.Nullable<int> value);
    partial void OnLUOTBANChanged();
    partial void OnMANCCChanging(System.Nullable<int> value);
    partial void OnMANCCChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIET_HDs = new EntitySet<CHITIET_HD>(new Action<CHITIET_HD>(this.attach_CHITIET_HDs), new Action<CHITIET_HD>(this.detach_CHITIET_HDs));
			this._CHITIET_PNs = new EntitySet<CHITIET_PN>(new Action<CHITIET_PN>(this.attach_CHITIET_PNs), new Action<CHITIET_PN>(this.detach_CHITIET_PNs));
			this._DOITRAs = new EntitySet<DOITRA>(new Action<DOITRA>(this.attach_DOITRAs), new Action<DOITRA>(this.detach_DOITRAs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHOMHANG = default(EntityRef<NHOMHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", DbType="Int NOT NULL")]
		public int MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					if (this._NHOMHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(100)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINH", DbType="Char(50)")]
		public string HINH
		{
			get
			{
				return this._HINH;
			}
			set
			{
				if ((this._HINH != value))
				{
					this.OnHINHChanging(value);
					this.SendPropertyChanging();
					this._HINH = value;
					this.SendPropertyChanged("HINH");
					this.OnHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHOILUONG", DbType="NChar(10)")]
		public string KHOILUONG
		{
			get
			{
				return this._KHOILUONG;
			}
			set
			{
				if ((this._KHOILUONG != value))
				{
					this.OnKHOILUONGChanging(value);
					this.SendPropertyChanging();
					this._KHOILUONG = value;
					this.SendPropertyChanged("KHOILUONG");
					this.OnKHOILUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int")]
		public System.Nullable<int> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUOTBAN", DbType="Int")]
		public System.Nullable<int> LUOTBAN
		{
			get
			{
				return this._LUOTBAN;
			}
			set
			{
				if ((this._LUOTBAN != value))
				{
					this.OnLUOTBANChanging(value);
					this.SendPropertyChanging();
					this._LUOTBAN = value;
					this.SendPropertyChanged("LUOTBAN");
					this.OnLUOTBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Int")]
		public System.Nullable<int> MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIET_HD", Storage="_CHITIET_HDs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIET_HD> CHITIET_HDs
		{
			get
			{
				return this._CHITIET_HDs;
			}
			set
			{
				this._CHITIET_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIET_PN", Storage="_CHITIET_PNs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIET_PN> CHITIET_PNs
		{
			get
			{
				return this._CHITIET_PNs;
			}
			set
			{
				this._CHITIET_PNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DOITRA", Storage="_DOITRAs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<DOITRA> DOITRAs
		{
			get
			{
				return this._DOITRAs;
			}
			set
			{
				this._DOITRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMHANG_SANPHAM", Storage="_NHOMHANG", ThisKey="MANH", OtherKey="MANH", IsForeignKey=true)]
		public NHOMHANG NHOMHANG
		{
			get
			{
				return this._NHOMHANG.Entity;
			}
			set
			{
				NHOMHANG previousValue = this._NHOMHANG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMHANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHOMHANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANH = value.MANH;
					}
					else
					{
						this._MANH = default(int);
					}
					this.SendPropertyChanged("NHOMHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_HDs(CHITIET_HD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIET_HDs(CHITIET_HD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIET_PNs(CHITIET_PN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIET_PNs(CHITIET_PN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_DOITRAs(DOITRA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DOITRAs(DOITRA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_PN")]
	public partial class CHITIET_PN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPN;
		
		private int _MASP;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<int> _GIANHAP;
		
		private System.Nullable<int> _THANHTIEN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(int value);
    partial void OnMAPNChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnGIANHAPChanging(System.Nullable<int> value);
    partial void OnGIANHAPChanged();
    partial void OnTHANHTIENChanging(System.Nullable<int> value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CHITIET_PN()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAP", DbType="Int")]
		public System.Nullable<int> GIANHAP
		{
			get
			{
				return this._GIANHAP;
			}
			set
			{
				if ((this._GIANHAP != value))
				{
					this.OnGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAP = value;
					this.SendPropertyChanged("GIANHAP");
					this.OnGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Int")]
		public System.Nullable<int> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIET_PN", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIET_PNs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIET_PNs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIET_PN", Storage="_PHIEUNHAP", ThisKey="MAPN", OtherKey="MAPN", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIET_PNs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIET_PNs.Add(this);
						this._MAPN = value.MAPN;
					}
					else
					{
						this._MAPN = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIET_QUYEN")]
	public partial class CHITIET_QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MACT;
		
		private int _MAQUYEN;
		
		private string _TENCT;
		
		private System.Nullable<int> _CAP_PHEP;
		
		private EntityRef<NHOMQUYEN> _NHOMQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTChanging(int value);
    partial void OnMACTChanged();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    partial void OnTENCTChanging(string value);
    partial void OnTENCTChanged();
    partial void OnCAP_PHEPChanging(System.Nullable<int> value);
    partial void OnCAP_PHEPChanged();
    #endregion
		
		public CHITIET_QUYEN()
		{
			this._NHOMQUYEN = default(EntityRef<NHOMQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MACT
		{
			get
			{
				return this._MACT;
			}
			set
			{
				if ((this._MACT != value))
				{
					this.OnMACTChanging(value);
					this.SendPropertyChanging();
					this._MACT = value;
					this.SendPropertyChanged("MACT");
					this.OnMACTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", DbType="Int NOT NULL")]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					if (this._NHOMQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCT", DbType="NVarChar(50)")]
		public string TENCT
		{
			get
			{
				return this._TENCT;
			}
			set
			{
				if ((this._TENCT != value))
				{
					this.OnTENCTChanging(value);
					this.SendPropertyChanging();
					this._TENCT = value;
					this.SendPropertyChanged("TENCT");
					this.OnTENCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP_PHEP", DbType="Int")]
		public System.Nullable<int> CAP_PHEP
		{
			get
			{
				return this._CAP_PHEP;
			}
			set
			{
				if ((this._CAP_PHEP != value))
				{
					this.OnCAP_PHEPChanging(value);
					this.SendPropertyChanging();
					this._CAP_PHEP = value;
					this.SendPropertyChanged("CAP_PHEP");
					this.OnCAP_PHEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMQUYEN_CHITIET_QUYEN", Storage="_NHOMQUYEN", ThisKey="MAQUYEN", OtherKey="MAQUYEN", IsForeignKey=true)]
		public NHOMQUYEN NHOMQUYEN
		{
			get
			{
				return this._NHOMQUYEN.Entity;
			}
			set
			{
				NHOMQUYEN previousValue = this._NHOMQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._NHOMQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMQUYEN.Entity = null;
						previousValue.CHITIET_QUYENs.Remove(this);
					}
					this._NHOMQUYEN.Entity = value;
					if ((value != null))
					{
						value.CHITIET_QUYENs.Add(this);
						this._MAQUYEN = value.MAQUYEN;
					}
					else
					{
						this._MAQUYEN = default(int);
					}
					this.SendPropertyChanged("NHOMQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOITRA")]
	public partial class DOITRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADT;
		
		private string _MAHD;
		
		private System.Nullable<System.DateTime> _NGAYDOI;
		
		private System.Nullable<int> _MASP;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<int> _GIABAN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<HOADON> _HOADON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADTChanging(int value);
    partial void OnMADTChanged();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnNGAYDOIChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDOIChanged();
    partial void OnMASPChanging(System.Nullable<int> value);
    partial void OnMASPChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnGIABANChanging(System.Nullable<int> value);
    partial void OnGIABANChanged();
    #endregion
		
		public DOITRA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._HOADON = default(EntityRef<HOADON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADT
		{
			get
			{
				return this._MADT;
			}
			set
			{
				if ((this._MADT != value))
				{
					this.OnMADTChanging(value);
					this.SendPropertyChanging();
					this._MADT = value;
					this.SendPropertyChanged("MADT");
					this.OnMADTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDOI", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYDOI
		{
			get
			{
				return this._NGAYDOI;
			}
			set
			{
				if ((this._NGAYDOI != value))
				{
					this.OnNGAYDOIChanging(value);
					this.SendPropertyChanging();
					this._NGAYDOI = value;
					this.SendPropertyChanged("NGAYDOI");
					this.OnNGAYDOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int")]
		public System.Nullable<int> MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int")]
		public System.Nullable<int> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DOITRA", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DOITRAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DOITRAs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(Nullable<int>);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_DOITRA", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.DOITRAs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.DOITRAs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _SDT_KH;
		
		private int _MANV;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<int> _TONGTIEN;
		
		private string _TRANGTHAI_DH;
		
		private string _HINHTHUC_TT;
		
		private string _LIDO;
		
		private EntitySet<CHITIET_HD> _CHITIET_HDs;
		
		private EntitySet<DOITRA> _DOITRAs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    partial void OnMANVChanging(int value);
    partial void OnMANVChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    partial void OnTRANGTHAI_DHChanging(string value);
    partial void OnTRANGTHAI_DHChanged();
    partial void OnHINHTHUC_TTChanging(string value);
    partial void OnHINHTHUC_TTChanged();
    partial void OnLIDOChanging(string value);
    partial void OnLIDOChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIET_HDs = new EntitySet<CHITIET_HD>(new Action<CHITIET_HD>(this.attach_CHITIET_HDs), new Action<CHITIET_HD>(this.detach_CHITIET_HDs));
			this._DOITRAs = new EntitySet<DOITRA>(new Action<DOITRA>(this.attach_DOITRAs), new Action<DOITRA>(this.detach_DOITRAs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Int NOT NULL")]
		public int MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI_DH", DbType="NVarChar(50)")]
		public string TRANGTHAI_DH
		{
			get
			{
				return this._TRANGTHAI_DH;
			}
			set
			{
				if ((this._TRANGTHAI_DH != value))
				{
					this.OnTRANGTHAI_DHChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI_DH = value;
					this.SendPropertyChanged("TRANGTHAI_DH");
					this.OnTRANGTHAI_DHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHTHUC_TT", DbType="NVarChar(50)")]
		public string HINHTHUC_TT
		{
			get
			{
				return this._HINHTHUC_TT;
			}
			set
			{
				if ((this._HINHTHUC_TT != value))
				{
					this.OnHINHTHUC_TTChanging(value);
					this.SendPropertyChanging();
					this._HINHTHUC_TT = value;
					this.SendPropertyChanged("HINHTHUC_TT");
					this.OnHINHTHUC_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIDO", DbType="NVarChar(100)")]
		public string LIDO
		{
			get
			{
				return this._LIDO;
			}
			set
			{
				if ((this._LIDO != value))
				{
					this.OnLIDOChanging(value);
					this.SendPropertyChanging();
					this._LIDO = value;
					this.SendPropertyChanged("LIDO");
					this.OnLIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIET_HD", Storage="_CHITIET_HDs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CHITIET_HD> CHITIET_HDs
		{
			get
			{
				return this._CHITIET_HDs;
			}
			set
			{
				this._CHITIET_HDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_DOITRA", Storage="_DOITRAs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<DOITRA> DOITRAs
		{
			get
			{
				return this._DOITRAs;
			}
			set
			{
				this._DOITRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="SDT_KH", OtherKey="SDT_KH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._SDT_KH = value.SDT_KH;
					}
					else
					{
						this._SDT_KH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_HDs(CHITIET_HD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIET_HDs(CHITIET_HD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
		
		private void attach_DOITRAs(DOITRA entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_DOITRAs(DOITRA entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SDT_KH;
		
		private string _TENKH;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private string _SDT_NHANHANG;
		
		private string _TEN_NHANHANG;
		
		private string _DIACHI_NHANHANG;
		
		private string _OTP;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnSDT_NHANHANGChanging(string value);
    partial void OnSDT_NHANHANGChanged();
    partial void OnTEN_NHANHANGChanging(string value);
    partial void OnTEN_NHANHANGChanged();
    partial void OnDIACHI_NHANHANGChanging(string value);
    partial void OnDIACHI_NHANHANGChanged();
    partial void OnOTPChanging(string value);
    partial void OnOTPChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="Char(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="Char(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NHANHANG", DbType="Char(10)")]
		public string SDT_NHANHANG
		{
			get
			{
				return this._SDT_NHANHANG;
			}
			set
			{
				if ((this._SDT_NHANHANG != value))
				{
					this.OnSDT_NHANHANGChanging(value);
					this.SendPropertyChanging();
					this._SDT_NHANHANG = value;
					this.SendPropertyChanged("SDT_NHANHANG");
					this.OnSDT_NHANHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_NHANHANG", DbType="NVarChar(50)")]
		public string TEN_NHANHANG
		{
			get
			{
				return this._TEN_NHANHANG;
			}
			set
			{
				if ((this._TEN_NHANHANG != value))
				{
					this.OnTEN_NHANHANGChanging(value);
					this.SendPropertyChanging();
					this._TEN_NHANHANG = value;
					this.SendPropertyChanged("TEN_NHANHANG");
					this.OnTEN_NHANHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_NHANHANG", DbType="NVarChar(50)")]
		public string DIACHI_NHANHANG
		{
			get
			{
				return this._DIACHI_NHANHANG;
			}
			set
			{
				if ((this._DIACHI_NHANHANG != value))
				{
					this.OnDIACHI_NHANHANGChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_NHANHANG = value;
					this.SendPropertyChanged("DIACHI_NHANHANG");
					this.OnDIACHI_NHANHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="Char(6)")]
		public string OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="SDT_KH", OtherKey="SDT_KH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANCC;
		
		private string _TENNCC;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(int value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_SANPHAM", Storage="_SANPHAMs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANV;
		
		private string _TENNV;
		
		private string _GIOITINH;
		
		private string _SDT;
		
		private string _MATKHAU;
		
		private string _TAIKHOAN;
		
		private System.Nullable<int> _MAQUYEN;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntityRef<NHOMQUYEN> _NHOMQUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(int value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMAQUYENChanging(System.Nullable<int> value);
    partial void OnMAQUYENChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._NHOMQUYEN = default(EntityRef<NHOMQUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(100)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(50)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Char(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="NVarChar(100)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", DbType="Int")]
		public System.Nullable<int> MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					if (this._NHOMQUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMQUYEN_NHANVIEN", Storage="_NHOMQUYEN", ThisKey="MAQUYEN", OtherKey="MAQUYEN", IsForeignKey=true)]
		public NHOMQUYEN NHOMQUYEN
		{
			get
			{
				return this._NHOMQUYEN.Entity;
			}
			set
			{
				NHOMQUYEN previousValue = this._NHOMQUYEN.Entity;
				if (((previousValue != value) 
							|| (this._NHOMQUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMQUYEN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._NHOMQUYEN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MAQUYEN = value.MAQUYEN;
					}
					else
					{
						this._MAQUYEN = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHOMQUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMHANG")]
	public partial class NHOMHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANH;
		
		private string _TENNH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHChanging(int value);
    partial void OnMANHChanged();
    partial void OnTENNHChanging(string value);
    partial void OnTENNHChanged();
    #endregion
		
		public NHOMHANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNH", DbType="NVarChar(100)")]
		public string TENNH
		{
			get
			{
				return this._TENNH;
			}
			set
			{
				if ((this._TENNH != value))
				{
					this.OnTENNHChanging(value);
					this.SendPropertyChanging();
					this._TENNH = value;
					this.SendPropertyChanged("TENNH");
					this.OnTENNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMHANG_SANPHAM", Storage="_SANPHAMs", ThisKey="MANH", OtherKey="MANH")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHOMHANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHOMHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMQUYEN")]
	public partial class NHOMQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUYEN;
		
		private string _TENQUYEN;
		
		private EntitySet<CHITIET_QUYEN> _CHITIET_QUYENs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    partial void OnTENQUYENChanging(string value);
    partial void OnTENQUYENChanged();
    #endregion
		
		public NHOMQUYEN()
		{
			this._CHITIET_QUYENs = new EntitySet<CHITIET_QUYEN>(new Action<CHITIET_QUYEN>(this.attach_CHITIET_QUYENs), new Action<CHITIET_QUYEN>(this.detach_CHITIET_QUYENs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUYEN", DbType="NVarChar(50)")]
		public string TENQUYEN
		{
			get
			{
				return this._TENQUYEN;
			}
			set
			{
				if ((this._TENQUYEN != value))
				{
					this.OnTENQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUYEN = value;
					this.SendPropertyChanged("TENQUYEN");
					this.OnTENQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMQUYEN_CHITIET_QUYEN", Storage="_CHITIET_QUYENs", ThisKey="MAQUYEN", OtherKey="MAQUYEN")]
		public EntitySet<CHITIET_QUYEN> CHITIET_QUYENs
		{
			get
			{
				return this._CHITIET_QUYENs;
			}
			set
			{
				this._CHITIET_QUYENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMQUYEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAQUYEN", OtherKey="MAQUYEN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_QUYENs(CHITIET_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMQUYEN = this;
		}
		
		private void detach_CHITIET_QUYENs(CHITIET_QUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMQUYEN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMQUYEN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMQUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPN;
		
		private int _MANCC;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _TONGNHAP;
		
		private System.Nullable<int> _MANV;
		
		private EntitySet<CHITIET_PN> _CHITIET_PNs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(int value);
    partial void OnMAPNChanged();
    partial void OnMANCCChanging(int value);
    partial void OnMANCCChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnTONGNHAPChanging(System.Nullable<int> value);
    partial void OnTONGNHAPChanged();
    partial void OnMANVChanging(System.Nullable<int> value);
    partial void OnMANVChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIET_PNs = new EntitySet<CHITIET_PN>(new Action<CHITIET_PN>(this.attach_CHITIET_PNs), new Action<CHITIET_PN>(this.detach_CHITIET_PNs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Int NOT NULL")]
		public int MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGNHAP", DbType="Int")]
		public System.Nullable<int> TONGNHAP
		{
			get
			{
				return this._TONGNHAP;
			}
			set
			{
				if ((this._TONGNHAP != value))
				{
					this.OnTONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TONGNHAP = value;
					this.SendPropertyChanged("TONGNHAP");
					this.OnTONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="Int")]
		public System.Nullable<int> MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIET_PN", Storage="_CHITIET_PNs", ThisKey="MAPN", OtherKey="MAPN")]
		public EntitySet<CHITIET_PN> CHITIET_PNs
		{
			get
			{
				return this._CHITIET_PNs;
			}
			set
			{
				this._CHITIET_PNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(int);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIET_PNs(CHITIET_PN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIET_PNs(CHITIET_PN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
}
#pragma warning restore 1591
